# set target to compile and setup in the guest
# choices: ['userspace', 'driver']
# default: userspace
TARGET = ENV['TARGET_HARNESS'] || 'userspace'

Vagrant.configure("2") do |config|
    # The Packer box we just added
    config.vm.box = "kafl_windows"
    # our box name in libvirt
    config.vm.define "vagrant-kafl-windows"

    # rsync doesn't work on WinRM
    config.vm.synced_folder ".", "/vagrant", disabled: true

    # Vagrant WinRM lib uses HTTP_PROXY even if destination is on local network
    config.trigger.before :up do |trigger|
        trigger.info = "Unset HTTP_PROXY"
        ENV['HTTP_PROXY'] = nil
        ENV['HTTPS_PROXY'] = nil
        ENV['http_proxy'] = nil
        ENV['https_proxy'] = nil
    end

    config.vm.provider :libvirt do |libvirt|
        # the qcow will be owned by the user
        # so kafl can use the VM's qcow as well
        libvirt.uri = "qemu:///session"
        # spice is better than VNC (mouse handling)
        libvirt.graphics_type = "spice"
        libvirt.graphics_port = 5900
        libvirt.cpus = 4
        libvirt.cputopology :sockets => '1', :cores => '4', :threads => '1'
        libvirt.memory = 4096
    end

    # workaround https://github.com/hashicorp/vagrant/issues/13193
    config.trigger.after :provision do |trigger|
        trigger.info = "Provisioning"
        trigger.run = {inline: "bash -c 'source ../venv/bin/activate && ./setup_target.sh -e target_harness=#{TARGET}'"}
    end
end
